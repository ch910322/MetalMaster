//<halrule>server-only</halrule>
/*
This is a template file for using stardard functions in halcust. No need to use webng.hal file or other files to just add new functions
This supports adding new web texts, adding new special elements, new structure types and web actions (both updating and non-updating)
*/
external inner function string 255 removenextlistitem(var string,string);
external procedure ShowContentTranslations(record WebNGElementVc);
external procedure ShowNewsLetterSignup(record WebNGElementVc);
external procedure ShowEmployeesOnWeb(record WebNGElementVc);
external procedure ShowContentListCust(record WebNGElementVc);
external procedure CustShowBestOffers(record WebNGElementVc);
// external procedure CustDocuments(record WebNGElementVc);
external procedure CustPDFDocuments(record WebNGElementVc);
external procedure CustDOCDocuments(record WebNGElementVc);
external procedure CustShowLanguageSelectElement();
external updating procedure MM_ShopAddToBasket();
external procedure CustShowBasketElement();
external procedure ShowItemVarsAjax();

global
function boolean ShowSpecialWebElementInternal(record WebNGElementVc WEr)
begin
  boolean res;
		
  res = true;
  switch (WEr.Type) begin
    case 200:
      ShowContentTranslations(WEr);
    case 201:
      ShowNewsLetterSignup(WEr);
    case 202:
      ShowEmployeesOnWeb(WEr);
    case 203:
      ShowContentListCust(WEr);
    case 204:
      CustShowLanguageSelectElement;
    case 205:
      CustShowBasketElement;
    case 206:
      CustShowBestOffers(WEr);
    case 207:
      CustPDFDocuments(WEr);
    case 208:
      CustDOCDocuments(WEr);
    otherwise
      res = false;
  end;
  ShowSpecialWebElementInternal = res;
  return;
end;

global
function Boolean ShowInternalWebApp(Integer lasttype,record WebNGStructVc WSr,string mpath)
begin
  Boolean res;

  //res = true;
  switch (lasttype) begin
    //case 200:res = true;
  otherwise
    res = false;
  end;
  ShowInternalWebApp = res;
  return;
end;

global
function Boolean InternalNodeIsApplication(Integer nodetype)
begin
  Boolean res;
  
/*
  if (nodetype==200) then begin
    res = true;
  end;
*/
  InternalNodeIsApplication = res;
  return;
end;

global
function string 255 CheckInternalStrings(Longint strno)
begin
  string 255 res;


  switch (strno) begin
    case 70000: res = "test";

    
  end;

  CheckInternalStrings = res;
  return;
end;


global
updating function Boolean InternalUpdatingActions(string action)
begin
  Boolean res;
  string 255 naction,app,fn;

  if (InString(action,".")>0) then begin
    naction = action;
    app = removenextlistitem(naction,".");
/*
    switch (app) begin

    end;
*/
  end;
  if (res==false) then begin
    switch (action) begin
      case "mm_addtobasket":
        MM_ShopAddToBasket;
        res = true;
    end;
  end;

  InternalUpdatingActions = res;
  return;
end;


global
function Boolean DoOuterWebActions(string action)
begin
  string 255 app,naction;
  Boolean res;
  Longint curtic;

  //split
  naction = action;
  app = removenextlistitem(naction,".");

  switch (app) begin
    case "getitemvars":
      ShowItemVarsAjax;
      res = true;
  end;

  DoOuterWebActions = res;
  return;
end;
